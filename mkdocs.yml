copyright: 'This work is licensed under a <a rel="license" href="https://creativecommons.org/licenses/by/4.0/">Creative Commons Attribution 4.0 International License</a>.<br/>Kx and kdb+ are registered trademarks of <a href="https://kx.com">Kx Systems, Inc.</a>, a subsidiary of <a href="https://www.fdtechnologies.com/">FD Technologies plc</a>.'

extra_css:
  - https://code.kx.com/stylesheets/2021.css # DO NOT ALTER
  - https://code.kx.com/stylesheets/prism.css # DO NOT ALTER
  - https://code.kx.com/stylesheets/extra.css # MAY BE COMMENTED OUT
  - https://code.kx.com/stylesheets/hide-footer-nav.css # MAY BE COMMENTED OUT
  - stylesheets/q.css # site-specific style

extra_javascript:
  - https://code.kx.com/scripts/prism.js
  - https://code.kx.com/scripts/jquery-3.6.0.min.js # jQuery for scripts/qsearch.js
  - https://code.kx.com/scripts/extra.js # DO NOT ALTER
  # MathJax scripts # MAY BE COMMENTED OUT
  - https://code.kx.com/scripts/mathjax.js
  - https://code.kx.com/scripts/polyfill.min.js
  - https://code.kx.com/scripts/tex-mml-chtml.js
  - scripts/qsearch.js # site-specific search engine

markdown_extensions:
  - abbr
  - admonition
  - attr_list
  - def_list
  - meta
  # - mkdocs-click
  - pymdownx.arithmatex:
      generic: true
  - pymdownx.caret
  - pymdownx.details
  - pymdownx.emoji:
      emoji_index: !!python/name:materialx.emoji.twemoji
      emoji_generator: !!python/name:materialx.emoji.to_svg
      options:
        custom_icons:
          - custom_theme/.icons
  - pymdownx.extra
  - pymdownx.highlight:
      use_pygments: false
  - pymdownx.keys
  # - pymdownx.magiclink
  - pymdownx.mark
  - pymdownx.smartsymbols
  - pymdownx.snippets
  - pymdownx.superfences:
      custom_fences:
        - name: mermaid
          class: mermaid
          format: !!python/name:pymdownx.superfences.fence_code_format
  - pymdownx.tabbed:
      alternate_style: true
  - pymdownx.tilde
  - tables
  - toc:
      permalink: true
      title: On this page

plugins:
  - search
  - exclude:
      glob:
        - "*.tmp"
        - "*.pdf"
        - "*.gz"
      regex:
        - '.*\.(tmp|bin|tar)$'
  - render_swagger

remote_branch: master
repo_name: ''
repo_url: ''
edit_uri: ""

site_description: 'Documentation for kdb+ and the q programming language'
site_name: 'kdb+ and q documentation'
site_url: https://code.kx.com/q
use_directory_urls: true

theme:
  custom_dir: custom_theme/
  name: material
  language: en
  favicon: https://code.kx.com/favicon.ico
  logo: https://code.kx.com/img/kx.svg
  font: false
  features:
    - content.code.annotate # Insiders
    - content.tabs.link # Insiders
    - content.code.copy
    - header.autohide
    - navigation.tabs
    - navigation.top
  palette:
    - media: "(prefers-color-scheme: light)"
      scheme: kx-light
      toggle:
        icon: material/toggle-switch-off-outline
        name: Switch to dark mode
    - media: "(prefers-color-scheme: dark)"
      scheme: slate
      toggle:
        icon: material/toggle-switch
        name: Switch to light mode
  static_templates:
    - 401.html # required by other subsites
    - 404.html # required by other subsites

nav:
  - Home: 'https://code.kx.com/home'
  - kdb+ and q:
    - About: index.md
    - Get Started:
      - Install: learn/install.md
    - Learn:
      - q:
        - Basics:
          - Hello, World: learn/q/basics/helloworld.md
          - REPL and the Terminal: learn/q/basics/repl.md
          - Syntax:
            - Indentation: learn/q/basics/syntax/indentation.md
            - Comments: learn/q/basics/syntax/comments.md
            - Naming Conventions: learn/q/basics/syntax/naming.md
            - Brackets: learn/q/basics/syntax/brackets.md
            - White space: learn/q/basics/syntax/whitespace.md
          - Variables:
            - Local: learn/q/basics/variables/local.md
            - Global: learn/q/basics/variables/global.md
          - Datatypes:
            - Built-in types: learn/q/basics/datatypes/builtins.md
            - Symbols: learn/q/basics/datatypes/symbols.md
            - Nulls and Infinites: learn/q/basics/datatypes/nullinf.md
            - Getting the type: learn/q/basics/datatypes/gettypes.md
            - Setting the type: learn/q/basics/datatypes/settypes.md
            - Casting: learn/q/basics/datatypes/casting.md
        - Data Structures:
          - Lists Arrays and Sets:
            - Add/Edit: learn/q/data_structures/lists_arrays/add_edit.md
            - Remove: learn/q/data_structures/lists_arrays/remove.md
            - Indexing and slicing: learn/q/data_structures/lists_arrays/index_slice.md
            - List operations: learn/q/data_structures/lists_arrays/list_operations.md
            - Regex: learn/q/data_structures/lists_arrays/regex.md
            - String operations: learn/q/data_structures/lists_arrays/string_operations.md
          - Dictionaries:
            - Add/Edit: learn/q/data_structures/dictionaries/add_edit.md
            - Remove: learn/q/data_structures/dictionaries/remove.md
            - Indexing and slicing: learn/q/data_structures/dictionaries/index_slice.md
            - Sorting: learn/q/data_structures/dictionaries/sorting.md
            - Joining: learn/q/data_structures/dictionaries/joining.md
            - Nested Dictionaries: learn/q/data_structures/dictionaries/nested.md
          - Tables: learn/q/data_structures/tables.md
          - Databases: learn/q/data_structures/databases.md
          - Views: learn/q/data_structures/views.md
          - Namespaces: learn/q/data_structures/namespaces.md
        - Control Flow:
          - If.. Else: learn/q/control_flow/ifelse.md
          - Case: learn/q/control_flow/case.md
          - Conditionals: learn/q/control_flow/conditionals.md
          - Loops:
            - Avoiding loops: learn/q/control_flow/loops/avoid.md
            - Do: learn/q/control_flow/loops/do.md
            - While: learn/q/control_flow/loops/while.md
          - Iterators:
            - Iterators: learn/q/control_flow/iterators/iterators.md
            - Maps: learn/q/control_flow/iterators/maps.md
            - Accumulators: learn/q/control_flow/iterators/accumulators.md
          - Explicit Return: learn/q/control_flow/return.md
          - Exception Handling: learn/q/control_flow/exceptions.md
          - Exit: learn/q/control_flow/exit.md
        - Input/Output:
          - File handling:
            - Supported types: learn/q/input_output/files/types.md
            - Read: learn/q/input_output/files/read.md
            - Append: learn/q/input_output/files/append.md
            - Write: learn/q/input_output/files/write.md
            - Get: learn/q/input_output/files/get.md
            - Set: learn/q/input_output/files/set.md
            - Delete: learn/q/input_output/files/delete.md
            - Connect: learn/q/input_output/files/connect.md
            - Utilities: learn/q/input_output/files/utils.md
        - Functions:
          - Built-in functions: learn/q/functions/builtins.md
          - Function Definition: learn/q/functions/definition.md
          - Typing: learn/q/functions/typing.md
          - Operators:
            - Operator Precedence: learn/q/functions/operators/precedence.md
            - Arithmetic: learn/q/functions/operators/math.md
            - 'Assignment (: +: -: etc)': learn/q/functions/operators/assignment.md
            - Bitwise (and/or/not etc): learn/q/functions/operators/bitwise.md
            - Comparison (=<> etc): learn/q/functions/operators/comparison.md
            - Identity (is/is not): learn/q/functions/operators/identity.md
            - Logic (and/or/not): learn/q/functions/operators/logic.md
          - Function overloading: learn/q/functions/overload.md
          - Composition: learn/q/functions/composition.md
          - Expressions:
            - Evaluation: learn/q/functions/expressions/eval.md
            - Parse Trees: learn/q/functions/expressions/parse.md
        - Inter-process Communication (IPC):
          - Introduction to IPC: learn/q/ipc/intro.md
          - Open connection: learn/q/ipc/open.md
          - Close connection: learn/q/ipc/close.md
          - Synchronous messaging: learn/q/ipc/sync.md
          - Asynchronous messaging: learn/q/ipc/async.md
          - Websockets: learn/q/ipc/websockets.md
          - Connecting to files: learn/q/ipc/file_connect.md
      - kdb:
        - Introduction to kdb+ databases:
          - Tables:
            - In memory tables: learn/kdb/intro/tables/in_memory.md
            - On disk tables: learn/kdb/intro/tables/on_disk.md
            - Pivot tables: learn/kdb/intro/tables/pivot.md
          - Databases:
            - Time series databases: learn/kdb/intro/database/time_series.md
          - Database file structures:
            - Splayed: learn/kdb/intro/file_structure/splayed.md
            - Partitioned: learn/kdb/intro/file_structure/partitioned.md
            - Segmented: learn/kdb/intro/file_structure/segmented.md
        - Database Operations:
          - Tables:
            - Columns: learn/kdb/dbops/tables/columns.md
            - Rows: learn/kdb/dbops/tables/rows.md
          - Create: learn/kdb/dbops/create.md
          - Insert / Upsert: learn/kdb/dbops/insert_upsert.md
          - Update: learn/kdb/dbops/update.md
          - Delete: learn/kdb/dbops/delete.md
          - Joins:
            - Inner Join: learn/kdb/dbops/joins/inner.md
            - Left Join: learn/kdb/dbops/joins/left.md
            - Union Join: learn/kdb/dbops/joins/union.md
            - Plus Join: learn/kdb/dbops/joins/plus.md
            - Equi Join: learn/kdb/dbops/joins/equi.md
          - Time based joins:
            - Asof join: learn/kdb/dbops/temporal_join/asof.md
            - Window join: learn/kdb/dbops/temporal_join/wjoin.md
          - Sorting: learn/kdb/dbops/sorting.md
        - Querying:
          - Syntax: 
            - qSQL: learn/kdb/query/syntax/qsql.md
            - Functional: learn/kdb/query/syntax/functional.md
            - SQL: learn/kdb/query/syntax/sql.md
          - Select: learn/kdb/query/select.md
          - Where: learn/kdb/query/where.md
          - And/ Or/ Not: learn/kdb/query/and_or_not.md
          - Group by: learn/kdb/query/groupby.md
          - Filtering: learn/kdb/query/filtering.md
          - Conditions: learn/kdb/query/conditions.md
          - Column Operations: learn/kdb/query/column_ops.md
          - Pivot Tables: learn/kdb/query/pivot.md
          - Query efficiency: learn/kdb/query/efficiency.md
        - Database Design:
          - Comparisons with other database: learn/kdb/design/comparisons.md
          - Database design principles:
            - Database purpose: learn/kdb/design/principles/database.md
            - Table purpose: learn/kdb/design/principles/tables.md
            - Query patterns: learn/kdb/design/principles/query.md
            - Very important fields: learn/kdb/design/principles/important_fields.md
            - Table relationships: learn/kdb/design/principles/relationships.md
            - Size matters: learn/kdb/design/principles/size.md
          - Schemas:
            - Schemas in kdb+: learn/kdb/design/schemas/schemas.md
            - Naming conventions: learn/kdb/design/schemas/naming.md
            - Schema consistency: learn/kdb/design/schemas/consistency.md
            - Ordering data: learn/kdb/design/schemas/ordering.md
            - Metadata attributes: learn/kdb/design/schemas/attributes.md
          - Keys:
            - Primary keys: learn/kdb/design/keys/primary.md
            - Foreign keys: learn/kdb/design/keys/foreign.md
          - Enumeration: learn/kdb/design/enumeration.md
          - Structure for high performance:
            - Reducing redundant data: learn/kdb/design/performance/reducing_data.md
            - XL databases: learn/kdb/design/performance/large_dbs.md
        - Ingesting data:
          - Core structure: learn/kdb/ingest/core.md
          - Feedhandler: learn/kdb/ingest/feedhandler.md
          - Data capture:
            - Tickerplant: learn/kdb/ingest/capture/tick.md
            - Logging: learn/kdb/ingest/capture/log.md
            - Zero latency: learn/kdb/ingest/capture/zero_latency.md
          - Real time processing:
            - Chained tickerplants: learn/kdb/ingest/real_time_processing/chained.md
            - Batch processing: learn/kdb/ingest/real_time_processing/batch.md
          - Real time database (RDB):
            - Raw data: learn/kdb/ingest/real_time_database/raw_data.md
            - Top of book calculations: learn/kdb/ingest/real_time_database/top_of_book.md
            - Real time analytics: learn/kdb/ingest/real_time_database/real_time_analytics.md
          - Interval database (IDB): learn/kdb/ingest/interval.md
        - Persisting data: 
          - Historical database (HDB): learn/kdb/persist/hdb.md
          - Segmented database: learn/kdb/persist/segmented.md
          - Preparing data for save:
            - End of day processing: learn/kdb/persist/prep/eod.md
            - Interval processing: learn/kdb/persist/prep/interval.md
            - Batch processing: learn/kdb/persist/prep/batch.md
          - Data resilience:
            - Data recovery: learn/kdb/persist/resilience/recovery.md
            - Failovers and Backups: learn/kdb/persist/resilience/failover.md
            - High availability: learn/kdb/persist/resilience/high_availability.md
        - Accessing data:
          - Managing load:
            - Gateways: learn/kdb/access/managing/gateways.md
            - Query routing: learn/kdb/access/managing/routing.md
      - Additional resources:
        - Q for quants: learn/brief-introduction.md
        - Q by Examples: learn/q-by-examples.md
        - Q for All (video): learn/q-for-all.md
        - Q for Mortals 3: https://code.kx.com/q4m3/
    - How to:
      - Interact with Databases:
        - Tables in the filesystem: database/index.md
        - Populating tables:
          - Loading from large files: kb/loading-from-large-files.md
          - Foreign keys: wp/foreign-keys.md
          - Linking columns: kb/linking-columns.md
        - Persisting tables:
          - Serializing an object: database/object.md
          - Splayed tables: kb/splayed-tables.md
          - Partitioned tables: kb/partition.md
          - Segmented databases: database/segment.md
        - Maintenance:
          - Data-At-Rest Encryption: kb/dare.md
          - File compression: kb/file-compression.md
          - Time-series simplification: wp/ts-shrink/index.md
          - Working with sym files: wp/symfiles.md
      - Optimize queries: wp/columnar-database/index.md
      - Communicate via IPC:
        - Overview: basics/ipc.md
        - Listening port: basics/listening-port.md
        - Deferred response: kb/deferred-response.md
        - Async callbacks: kb/callbacks.md
        - Named pipes: kb/named-pipes.md
        - Serialization examples: kb/serialization.md
        - Socket sharding: wp/socket-sharding/index.md
        - SSL/TLS: kb/ssl.md
        - HTTP: kb/http.md
        - WebSockets: kb/websockets.md
      - Profile your code: kb/profiler.md
      - Debug your code: basics/debug.md
      - Manage streaming data:
        - Alternative architecture: kb/kdb-tick.md
        - TP Log (data recovery): wp/data-recovery.md
        - Log Files: kb/logging.md
        - RTEs (real-time engines): wp/rt-tick/index.md
        - Gateway design: wp/gateway-design/index.md
        - Query routing: wp/query-routing/index.md
        - Load balancing: kb/load-balancing.md
        - Profiling: wp/tick-profiling.md
        - Disaster recovery: wp/disaster-recovery/index.md
        - Order Book: wp/order-book.md
        - Alternative in-memory layouts: kb/alternative-in-memory-layouts.md
        - Corporate actions: kb/corporate-actions.md
        - Distributed systems: wp/query-interface.md
        - RDB intraday writedown: wp/intraday-writedown/index.md
      - Firewalling: kb/firewalling.md # Can be combined with permissions whitepaper
      - Multiple versions: kb/versions.md     # Rename to manage multiple versions of q
      - Parallel processing: basics/peach.md  # Convert to how-to with content from wp/multi-thread/index.md
    - Reference:
      - Reference card: ref/index.md
      - Phrasebook: https://code.kx.com/phrases/     # Merge as appendix with reference card
      - By topic: basics/by-topic.md
      - Iteration:
        - Overview: basics/iteration.md
        - Implicit iteration: basics/implicit-iteration.md
        - Iterators: ref/iterators.md
        - Maps: ref/maps.md
        - Accumulators: ref/accumulators.md
        - Guide to iterators: wp/iterators/index.md
      - Keywords:
        - abs: ref/abs.md
        - aj, aj0, ajf, ajf0: ref/aj.md
        - all, any: ref/all-any.md
        - and: ref/and.md
        - asc, iasc, xasc: ref/asc.md
        - asof: ref/asof.md
        - attr: ref/attr.md
        - avg, avgs, mavg, wavg: ref/avg.md
        - bin, binr: ref/bin.md
        - ceiling: ref/ceiling.md
        - count, mcount: ref/count.md
        - cols, xcol, xcols: ref/cols.md
        - cor: ref/cor.md
        - cos, acos: ref/cos.md
        - cov, scov: ref/cov.md
        - cross: ref/cross.md
        - csv: ref/csv.md
        - cut: ref/cut.md
        - delete: ref/delete.md
        - deltas: ref/deltas.md
        - desc, idesc, xdesc: ref/desc.md
        - dev, mdev, sdev: ref/dev.md
        - differ: ref/differ.md
        - distinct: ref/distinct.md
        - div: ref/div.md
        - dsave: ref/dsave.md
        - each, peach: ref/each.md
        - ej: ref/ej.md
        - ema: ref/ema.md
        - enlist: ref/enlist.md
        - eval, reval: ref/eval.md
        - except: ref/except.md
        - exec: ref/exec.md
        - exit: ref/exit.md
        - exp, xexp: ref/exp.md
        - fby: ref/fby.md
        - fills: ref/fill.md
        - first, last: ref/first.md
        - fkeys: ref/fkeys.md
        - flip: ref/flip.md
        - floor: ref/floor.md
        - get, set: ref/get.md
        - getenv, setenv: ref/getenv.md
        - group: ref/group.md
        - gtime, ltime: ref/gtime.md
        - hcount: ref/hcount.md
        - hdel: ref/hdel.md
        - hopen, hclose: ref/hopen.md
        - hsym: ref/hsym.md
        - ij, ijf: ref/ij.md
        - in: ref/in.md
        - insert: ref/insert.md
        - inter: ref/inter.md
        - inv: ref/inv.md
        - key: ref/key.md
        - keys, xkey: ref/keys.md
        - like: ref/like.md
        - lj, ljf: ref/lj.md
        - load, rload: ref/load.md
        - log, xlog: ref/log.md
        - lower: ref/lower.md
        - lsq: ref/lsq.md
        - max, maxs, mmax: ref/max.md
        - md5: ref/md5.md
        - med: ref/med.md
        - meta: ref/meta.md
        - min, mins, mmin: ref/min.md
        - mmu: ref/mmu.md
        - mod: ref/mod.md
        - neg: ref/neg.md
        - next, prev, xprev: ref/next.md
        - not: ref/not.md
        - 'null': ref/null.md
        - or: ref/or.md
        - over, scan: ref/over.md
        - parse: ref/parse.md
        - pj: ref/pj.md
        - prd, prds: ref/prd.md
        - prior: ref/prior.md
        - rand: ref/rand.md
        - rank: ref/rank.md
        - ratios: ref/ratios.md
        - raze: ref/raze.md
        - read0: ref/read0.md
        - read1: ref/read1.md
        - reciprocal: ref/reciprocal.md
        - reverse: ref/reverse.md
        - rotate: ref/rotate.md
        - save, rsave: ref/save.md
        - select: ref/select.md
        - show: ref/show.md
        - signum: ref/signum.md
        - sin, asin: ref/sin.md
        - sqrt: ref/sqrt.md
        - ss, ssr: ref/ss.md
        - string: ref/string.md
        - sublist: ref/sublist.md
        - sum, sums, msum, wsum: ref/sum.md
        - sv: ref/sv.md
        - system: ref/system.md
        - tables: ref/tables.md
        - tan, atan: ref/tan.md
        - til: ref/til.md
        - trim, ltrim, rtrim: ref/trim.md
        - type: ref/type.md
        - uj, ujf: ref/uj.md
        - union: ref/union.md
        - ungroup: ref/ungroup.md
        - update: ref/update.md
        - upsert: ref/upsert.md
        - value: ref/value.md
        - var, svar: ref/var.md
        - view, views: ref/view.md
        - vs: ref/vs.md
        - where: ref/where.md
        - within: ref/within.md
        - wj, wj1: ref/wj.md
        - xbar: ref/xbar.md
        - xgroup: ref/xgroup.md
        - xrank: ref/xrank.md
      - Overloaded glyphs: ref/overloads.md
      - Operators:
        - Add: ref/add.md
        - Amend: ref/amend.md
        - Apply, Index, Trap: ref/apply.md
        - Assign: ref/assign.md
        - Cast: ref/cast.md
        - Coalesce: ref/coalesce.md
        - Compose: ref/compose.md
        - Cut: ref/cut.md
        - Deal, Roll, Permute: ref/deal.md
        - Delete: ref/delete.md
        - Display: ref/display.md
        - Dict: ref/dict.md
        - Divide: ref/divide.md
        - Dynamic Load: ref/dynamic-load.md
        - Drop: ref/drop.md
        - Enkey, Unkey: ref/enkey.md
        - Enumerate: ref/enumerate.md
        - Enumeration: ref/enumeration.md
        - Enum Extend: ref/enum-extend.md
        - Equal: ref/equal.md
        - Exec: ref/exec.md
        - File Binary: ref/file-binary.md
        - File Text: ref/file-text.md
        - Fill: ref/fill.md
        - Find: ref/find.md
        - Flip Splayed: ref/flip-splayed.md
        - Greater: ref/greater.md
        - Greater Than: ref/greater-than.md
        - Identity, Null: ref/identity.md
        - Join: ref/join.md
        - Less Than: ref/less-than.md
        - Lesser: ref/lesser.md
        - Match: ref/match.md
        - Matrix Multiply: ref/mmu.md
        - Multiply: ref/multiply.md
        - Not Equal: ref/not-equal.md
        - Pad: ref/pad.md
        - Select: ref/select.md
        - Set Attribute: ref/set-attribute.md
        - Simple Exec: ref/simple-exec.md
        - Signal: ref/signal.md
        - Subtract: ref/subtract.md
        - Take: ref/take.md
        - Tok: ref/tok.md
        - Update: ref/update.md
        - Vector Conditional: ref/vector-conditional.md
      - Control constructs:
        - Cond: ref/cond.md
        - do: ref/do.md
        - if: ref/if.md
        - while: ref/while.md
      - Namespaces:
        - .h (markup): ref/doth.md
        - .j (JSON): ref/dotj.md
        - .m (memory backed files): ref/dotm.md
        - .Q (utils): ref/dotq.md
        - .z (env, callbacks): ref/dotz.md
      - Application: basics/application.md
      - Atomic functions: basics/atomic.md
      - Comparison: basics/comparison.md
      - Conformability: basics/conformable.md
      - Connection handles: basics/handles.md
      - Command-line options: basics/cmdline.md
      - Datatypes: basics/datatypes.md
      - Dictionaries: basics/dictsandtables.md
      - Enumerations: basics/enumerations.md
      - Evaluation control: basics/control.md
      - Exposed infrastructure: basics/exposed-infrastructure.md
      - File system: basics/files.md
      - Function notation: basics/function-notation.md
      - Glossary: basics/glossary.md
      - Internal functions: basics/internal.md
      - Joins: basics/joins.md
      - Mathematics: basics/math.md
      - Metadata: basics/metadata.md
      - Namespaces: basics/namespaces.md
      - Parse trees: basics/parsetrees.md
      - qSQL:
        - qSQL queries: basics/qsql.md
        - Functional qSQL: basics/funsql.md
      - Regular Expressions: basics/regex.md
      - Syntax: basics/syntax.md
      - System commands: basics/syscmds.md
      - Tables: kb/faq.md
      - Variadic syntax: basics/variadic.md
      - Errors: basics/errors.md
      - Temporal data: kb/temporal-data.md
      - Precision: basics/precision.md
      - Multithreaded input: kb/multithreaded-input.md
      - Multithreaded primitives: kb/mt-primitives.md
      - kdb+tick:
        - Tickerplant (tick.q): architecture/tickq.md
        - Tickerplant pub/sub (u.q): architecture/uq.md
        - RDB (r.q): architecture/rq.md
    - Integrations:
      - Language:
        - C/C++:
          - Quick guide: interfaces/c-client-for-q.md
          - API reference: interfaces/capiref.md
          - C API for kdb+: wp/capi/index.md
        - C#: interfaces/csharp.md
        - Foreign Function Interface (FFI): interfaces/ffi.md
        - Java: interfaces/java.md
        - Python: interfaces/python.md
        - R: interfaces/r.md
        - Rust: interfaces/rust.md
      - GPUs: interfaces/gpus.md
      - ODBC:
        - ODBC client: interfaces/q-client-for-odbc.md
        - ODBC3 server: interfaces/q-server-for-odbc3.md
      - Cloud vendor integrations:
        - About: cloud/index.md
        - Amazon Web Services:
          - Reference architecture: cloud/aws/index.md
          - Migrating a kdb+ HDB to Amazon EC2: cloud/aws/migration.md
          - AWS Lambda: cloud/aws-lambda/index.md
        - Microsoft Azure:
           - Reference architecture: cloud/azure/architecture.md
        - Google Cloud:
          - Reference architecture: cloud/gcpm/architecture.md
      - Additional Resources:
        - Open source community extensions: github.md # Move to crowd sourced on GIthub instead - like: https://github.com/qbists/awesome-q
        - Matlab: interfaces/matlab-client-for-q.md
        - Scala: interfaces/scala-client-for-q.md
        - Excel: interfaces/excel-client-for-q.md
        - Handle FIX message format: wp/fix-messaging.md # Convert from WP - add code to repo/cookbook
        - Geospatial indexing: kb/geospatial.md # Needs a rework or just delete - KX have a much better version internally, open source?
    - Examples:
      - Linear programming: kb/lp.md
      - Programming examples: kb/programming-examples.md
      - Programming idioms: kb/programming-idioms.md # Phrasebook
      - Unicode: kb/unicode.md
      - Performance tips: kb/performance-tips.md
    - Help and Support:
      - Academy: https://learninghub.kx.com # Avoid linking to different site from ToC - jarring
      - Discussion Forum: https://learninghub.kx.com/forums/forum/kdb # Avoid linking to different site from ToC - jarring
      - FAQ: kb/faq-listbox.md # This page is a mess - remove it and maybe reuse little bits only
      - IDE: learn/tour/ide.md # Needs updating and to mention VS Code plugin - move to 
      - Origins: learn/archive.md
      - Licenses: learn/licensing.md
    - Release notes:
      - History: releases/index.md
      - Changes in 4.1: releases/ChangesIn4.1.md
      - Changes in 4.0: releases/ChangesIn4.0.md
      - Changes in 3.6: releases/ChangesIn3.6.md
      - Changes in 3.5: releases/ChangesIn3.5.md
      - Changes in 3.4: releases/ChangesIn3.4.md
      - Changes in 3.3: releases/ChangesIn3.3.md
      - Changes in 3.2: releases/ChangesIn3.2.md
      - Changes in 3.1: releases/ChangesIn3.1.md
      - Changes in 3.0: releases/ChangesIn3.0.md
      - Changes in 2.8: releases/ChangesIn2.8.md
      - Changes in 2.7: releases/ChangesIn2.7.md
      - Changes in 2.6: releases/ChangesIn2.6.md
      - Changes in 2.5: releases/ChangesIn2.5.md
      - Changes in 2.4: releases/ChangesIn2.4.md
      - Withdrawn: releases/withdrawn.md
    # - White papers: wp/index.md
    - About this site: about/thissite.md
  - kdb Insights SDK: 'https://code.kx.com/insights'
  - kdb Insights Enterprise: 'https://code.kx.com/insights/enterprise'
  - KDB.AI: 'https://code.kx.com/kdbai'
  - PyKX: 'https://code.kx.com/pykx'
  - APIs: 'https://code.kx.com/insights/api'
  - Help: 'https://code.kx.com/home/support.html'
