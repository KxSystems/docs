<tr markdown><td markdown>[abs](abs.md "absolute value")</td><td markdown>[csv](csv.md "comma delimiter")</td><td markdown>[first](first.md "first item")</td><td markdown>[keys](keys.md "names of a table's columns")</td><td markdown>[mmu](mmu.md "matrix multiplication")</td><td markdown>[reciprocal](reciprocal.md "reciprocal of a number")</td><td markdown>[sum](sum.md "sum of a list")</td><td markdown>[where](where.md "replicated items")</td></tr>
<tr markdown><td markdown>[acos](cos.md "arccosine")</td><td markdown>[cut](cut.md "cut array into pieces")</td><td markdown>[fkeys](fkeys.md "foreign-key columns mapped to their tables")</td><td markdown>[last](first.md#last "last item")</td><td markdown>[mod](mod.md "remainder")</td><td markdown>[reval](eval.md#reval "variation of eval")</td><td markdown>[sums](sum.md#sums "cumulative sums")</td><td markdown>[while](while.md "repeat under condition")</td></tr>
<tr markdown><td markdown>[aj aj0](aj.md "as-of join")</td><td markdown>[delete](delete.md#delete-keyword "delete rows or columns from a table")</td><td markdown>[flip](flip.md "transpose")</td><td markdown>[like](like.md "pattern matching")</td><td markdown>[msum](sum.md#msum "moving sum")</td><td markdown>[reverse](reverse.md "reverse the order of items")</td><td markdown>[sv](sv.md "decode")</td><td markdown>[within](within.md "flag items within range")</td></tr>
<tr markdown><td markdown>[ajf ajf0](aj.md "as-of join")</td><td markdown>[deltas](deltas.md "differences between consecutive pairs")</td><td markdown>[floor](floor.md "greatest integer less than argument")</td><td markdown>[lj ljf](lj.md "left join")</td><td markdown>[neg](neg.md "negate")</td><td markdown>[rload](load.md#rload "load a splayed table")</td><td markdown>[svar](var.md#svar "statistical variance")</td><td markdown>[wj wj1](wj.md "window join")</td></tr>
<tr markdown><td markdown>[all](all-any.md#all "all nonzero")</td><td markdown>[desc](desc.md "descending sort")</td><td markdown>[get](get.md "get a q data file")</td><td markdown>[load](load.md "load binary data")</td><td markdown>[next](next.md "next items")</td><td markdown>[rotate](rotate.md "rotate items")</td><td markdown>[system](system.md "execute system command")</td><td markdown>[wsum](sum.md#wsum "weighted sum")</td></tr>
<tr markdown><td markdown>[and](lesser.md "lesser")</td><td markdown>[dev](dev.md "standard deviation")</td><td markdown>[getenv](getenv.md "value of an environment variable")</td><td markdown>[log](log.md "natural logarithm")</td><td markdown>[not](not.md "logical not")</td><td markdown>[rsave](save.md#rsave "")</td><td markdown>[tables](tables.md "sorted list of tables")</td><td markdown>[xasc](asc.md#xasc "table sorted ascending by columns")</td></tr>
<tr markdown><td markdown>[any](all-any.md#any "any item is non-zero")</td><td markdown>[differ](differ.md "flag differences in consecutive pairs")</td><td markdown>[group](group.md "dictionary of distinct items")</td><td markdown>[lower](lower.md "lower case")</td><td markdown>[null](null.md "is argument a null")</td><td markdown>[rtrim](trim.md#rtrim "remove trailing spaces")</td><td markdown>[tan](tan.md "tangent")</td><td markdown>[xbar](xbar.md "interval bar")</td></tr>
<tr markdown><td markdown>[asc](asc.md "ascending sort")</td><td markdown>[distinct](distinct.md "unique items")</td><td markdown>[gtime](gtime.md "UTC timestamp")</td><td markdown>[lsq](lsq.md "least squares â€“ matrix divide")</td><td markdown>[or](greater.md "greater")</td><td markdown>[save](save.md "save global data to file")</td><td markdown>[til](til.md "integers up to x")</td><td markdown>[xcol](cols.md#xcol "rename table columns")</td></tr>
<tr markdown><td markdown>[asin](sin.md "arcsine")</td><td markdown>[div](div.md "integer division")</td><td markdown>[hclose](hopen.md#hclose "close a file or process")</td><td markdown>[ltime](gtime.md#ltime "local timestamp")</td><td markdown>[over](over.md "reduce an array with a value")</td><td markdown>[scan](over.md "apply value to successive items")</td><td markdown>[trim](trim.md "remove leading and trailing spaces")</td><td markdown>[xcols](cols.md#xcols "re-order table columns")</td></tr>
<tr markdown><td markdown>[asof](asof.md "as-of join")</td><td markdown>[do](do.md "repeat")</td><td markdown>[hcount](hcount.md "size of a file")</td><td markdown>[ltrim](trim.md#ltrim "function remove leading spaces")</td><td markdown>[parse](parse.md "parse a string")</td><td markdown>[scov](cov.md#scov "statistical covariance")</td><td markdown>[type](type.md "data type")</td><td markdown>[xdesc](desc.md#xdesc "table sorted descending by columns")</td></tr>
<tr markdown><td markdown>[atan](tan.md "arctangent")</td><td markdown>[dsave](dsave.md "save global tables to disk")</td><td markdown>[hdel](hdel.md "delete a file")</td><td markdown>[mavg](avg.md#mavg "moving average")</td><td markdown>[peach](each.md "parallel each")</td><td markdown>[sdev](dev.md#sdev "statistical standard deviation")</td><td markdown>[uj ujf](uj.md "union join")</td><td markdown>[xexp](exp.md#xexp "raised to a power")</td></tr>
<tr markdown><td markdown>[attr](attr.md "attributes")</td><td markdown>[each](each.md "apply to each item")</td><td markdown>[hopen](hopen.md "open a file")</td><td markdown>[max](max.md "maximum")</td><td markdown>[pj](pj.md "plus join")</td><td markdown>[select](select.md "select columns from a table")</td><td markdown>[ungroup](ungroup.md "flattened table")</td><td markdown>[xgroup](xgroup.md "table grouped by keys")</td></tr>
<tr markdown><td markdown>[avg](avg.md#avg "arithmetic mean")</td><td markdown>[ej](ej.md "equi-join")</td><td markdown>[hsym](hsym.md "convert symbol to filename or IP address")</td><td markdown>[maxs](max.md#maxs "maxima of preceding items")</td><td markdown>[prd](prd.md "product")</td><td markdown>[set](get.md#set "assign a value to a name")</td><td markdown>[union](union.md "distinct items of combination of two lists")</td><td markdown>[xkey](keys.md#xkey "set primary keys of a table")</td></tr>
<tr markdown><td markdown>[avgs](avg.md#avgs "running averages")</td><td markdown>[ema](ema.md "exponentially-weighted moving average")</td><td markdown>[iasc](asc.md#iasc "indices of ascending sort")</td><td markdown>[mcount](count.md#mcount "moving count")</td><td markdown>[prds](prd.md "product")</td><td markdown>[setenv](getenv.md#setenv "set an environment variable")</td><td markdown>[update](update.md "insert or replace table records")</td><td markdown>[xlog](log.md#xlog "base-x logarithm")</td></tr>
<tr markdown><td markdown>[bin binr](bin.md "binary search")</td><td markdown>[enlist](enlist.md "arguments as a list")</td><td markdown>[idesc](desc.md#idesc "indices of descending sort")</td><td markdown>[md5](md5.md "MD5 hash")</td><td markdown>[prev](next.md#prev "previous items")</td><td markdown>[show](show.md "format to the console")</td><td markdown>[upper](lower.md#upper "upper-case")</td><td markdown>[xprev](next.md#xprev "previous items")</td></tr>
<tr markdown><td markdown>[ceiling](ceiling.md "lowest integer above")</td><td markdown>[eval](eval.md "evaluate a parse tree")</td><td markdown>[if](if.md "if")</td><td markdown>[mdev](dev.md#mdev "moving deviation")</td><td markdown>[prior](prior.md "apply function between each item and its predecessor")</td><td markdown>[signum](signum.md "sign of its argument/s")</td><td markdown>[upsert](upsert.md "add table records")</td><td markdown>[xrank](xrank.md "items assigned to buckets")</td></tr>
<tr markdown><td markdown>[cols](cols.md#cols "column names of a table")</td><td markdown>[except](except.md "left argument without items in right argument")</td><td markdown>[ij ijf](ij.md "inner join")</td><td markdown>[med](med.md "median")</td><td markdown>[rand](rand.md "random number")</td><td markdown>[sin](sin.md "sine")</td><td markdown>[value](value.md "value of a variable or dictionary key; value of an executed sting")</td><td/></tr>
<tr markdown><td markdown>[cor](cor.md "correlation")</td><td markdown>[exec](exec.md "")</td><td markdown>[in](in.md "membership")</td><td markdown>[meta](meta.md "metadata of a table")</td><td markdown>[rank](rank.md "grade up")</td><td markdown>[sqrt](sqrt.md "square root")</td><td markdown>[var](var.md "variance")</td><td/></tr>
<tr markdown><td markdown>[cos](cos.md "cosine")</td><td markdown>[exit](exit.md "terminate q")</td><td markdown>[insert](insert.md "append records to a table")</td><td markdown>[min](min.md "minimum")</td><td markdown>[ratios](ratios.md "ratios of consecutive pairs")</td><td markdown>[ss](ss.md "string search")</td><td markdown>[view](view.md "definition of a dependency")</td><td/></tr>
<tr markdown><td markdown>[count](count.md "number of items")</td><td markdown>[exp](exp.md "power of e")</td><td markdown>[inter](inter.md "items common to both arguments")</td><td markdown>[mins](min.md#mins "minimum of preceding items")</td><td markdown>[raze](raze.md "join items")</td><td markdown>[ssr](ss.md#ssr "string search and replace")</td><td markdown>[views](view.md#views "list of defined views")</td><td/></tr>
<tr markdown><td markdown>[cov](cov.md "covariance")</td><td markdown>[fby](fby.md "filter-by")</td><td markdown>[inv](inv.md "matrix inverse")</td><td markdown>[mmax](max.md#mmax "moving maxima")</td><td markdown>[read0](read0.md "read file as lines")</td><td markdown>[string](string.md "cast to string")</td><td markdown>[vs](vs.md "encode")</td><td/></tr>
<tr markdown><td markdown>[cross](cross.md "cross product")</td><td markdown>[fills](fill.md#fills "forward-fill nulls")</td><td markdown>[key](key.md "keys of a dictionary etc.")</td><td markdown>[mmin](min.md#mmin "moving minima")</td><td markdown>[read1](read1.md "read file as bytes")</td><td markdown>[sublist](sublist.md "sublist of a list")</td><td markdown>[wavg](avg.md#wavg "weighted average")</td><td/></tr>
